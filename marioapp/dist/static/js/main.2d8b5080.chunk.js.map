{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","store/types.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/index.js","config/firebase.js","index.js"],"names":["compose","connect","state","users","firestore","data","uid","firebase","auth","user","signOut","dispatch","getState","a","getFirebase","getFirestore","type","firestoreConnect","collection","console","log","className","to","onClick","initials","SignedOutLinks","props","Notifications","ProjectSummary","project","title","authorFirstname","authorLastname","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","ordered","ownProps","match","params","content","authError","signIn","credentials","email","password","signInWithEmailAndPassword","res","payload","useState","formData","setFormData","handleChange","e","target","value","onSubmit","preventDefault","htmlFor","onChange","name","message","signUp","newUser","fireStore","createUserWithEmailAndPassword","doc","set","firstName","lastName","createProject","history","profile","add","authorId","Date","replace","App","exact","path","component","Dashboard","ProjectDetails","SignIn","SignUp","CreateProject","initialState","combineReducers","action","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","middleware","thunk","withExtraArgument","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","reactReduxFirebase","firebaseConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","then","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d8b5080.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\nimport { compose } from \"redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n\r\nconst SignedInLinks = ({ signOut, user }) => {\r\n  console.log(user);\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li>\r\n          <NavLink to=\"/createProject\">New Project</NavLink>\r\n        </li>\r\n        <li>\r\n          <a onClick={signOut}>Logout</a>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n            {user && user.initials}\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nSignedInLinks.propTypes = {};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const users = state.firestore.data.users;\r\n  const uid = state.firebase.auth.uid;\r\n  const user = users ? users[uid] : null;\r\n  return {\r\n    user,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { signOut }),\r\n  firestoreConnect([{ collection: \"users\" }])\r\n)(SignedInLinks);\r\n","import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_ERROR,\r\n  LOGOUT_SUCCESS,\r\n  LOGOUT_FAIL,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAIL,\r\n} from \"../types\";\r\n\r\nexport const signIn = (credentials) => async (\r\n  dispatch,\r\n  getState,\r\n  { getFirestore, getFirebase }\r\n) => {\r\n  const { email, password } = credentials;\r\n  const firebase = getFirebase();\r\n  try {\r\n    const res = await firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password);\r\n    console.log(res);\r\n    dispatch({ type: LOGIN_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({ type: LOGIN_ERROR, payload: error });\r\n  }\r\n};\r\n\r\nexport const signOut = () => async (\r\n  dispatch,\r\n  getState,\r\n  { getFirebase, getFirestore }\r\n) => {\r\n  const firebase = getFirebase();\r\n  try {\r\n    await firebase.auth().signOut();\r\n    dispatch({ type: LOGOUT_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({ type: LOGOUT_FAIL });\r\n  }\r\n};\r\n\r\nexport const signUp = (newUser) => async (\r\n  dispatch,\r\n  getState,\r\n  { getFirebase, getFirestore }\r\n) => {\r\n  const firebase = getFirebase();\r\n  const fireStore = getFirestore();\r\n\r\n  try {\r\n    var res = await firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password);\r\n    res = await fireStore\r\n      .collection(\"users\")\r\n      .doc(res.user.uid)\r\n      .set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0],\r\n      });\r\n    dispatch({ type: SIGNUP_SUCCESS, payload: res });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({ type: SIGNUP_FAIL, payload: error });\r\n  }\r\n};\r\n","export const CREATE_PROJECT = \"CREATE_PROJECT\";\r\nexport const CREATE_PROJECT_ERROR = \"CREATE_PROJECT_ERROR\";\r\n\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const LOGOUT_FAIL = \"LOGOUT_FAIL\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNUP_FAIL = \"SIGNUP_FAIL\";\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SignedOutLinks = (props) => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li>\r\n          <NavLink to=\"/signup\">SignUp</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/signin\">LogIn</NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nSignedOutLinks.propTypes = {};\r\n\r\nexport default SignedOutLinks;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = ({ firebase: { auth } }) => {\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          MarioPlan\r\n        </Link>\r\n        {auth.uid ? <SignedInLinks /> : <SignedOutLinks />}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  firebase: state.firebase,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Navbar);\r\n","import React from \"react\";\r\n\r\nconst Notifications = () => {\r\n  return (\r\n    <div>\r\n      <p>Notifications</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"card z-depth-0 project-summary\">\r\n        <div className=\"card-content grey-text text-darken-3\">\r\n          <span className=\"card-title\">{project.title}</span>\r\n          <p>\r\n            Posted by {project.authorFirstname} {project.authorLastname}\r\n          </p>\r\n          <p className=\"grey-text\">\r\n            {moment(project.createdAt.toDate()).calendar()}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"project-list section\">\r\n        {projects &&\r\n          projects.map((project) => {\r\n            return (\r\n              <Link to={`/project/${project.id}`} key={project.id}>\r\n                <ProjectSummary project={project} />\r\n              </Link>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React from \"react\";\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n\r\nconst Dashboard = ({ projects, auth }) => {\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n  return (\r\n    <div className=\"dashboard container\">\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m6\">\r\n          <ProjectList projects={projects} />\r\n        </div>\r\n        <div className=\"col s12 m5 offset-m1\">\r\n          <Notifications />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  projects: state.firestore.ordered.projects,\r\n  auth: state.firebase.auth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"projects\" }])\r\n)(Dashboard);\r\n","import React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst ProjectDetails = ({ project, auth }) => {\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n  return (\r\n    <Fragment>\r\n      {project ? (\r\n        <div>\r\n          <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n              <div className=\"card-content\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>{project.content}</p>\r\n              </div>\r\n              <div className=\"card-action gret grey-text lighten-4\">\r\n                <div>\r\n                  Posted by {project.authorFirstname}\r\n                  {project.authorLastname}\r\n                </div>\r\n                <div></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"container center\">\r\n          <p>Loading Project...</p>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"projects\" }])\r\n)(ProjectDetails);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst SignIn = ({ auth, authError, signIn }) => {\r\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n  const { email, password } = formData;\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.id]: e.target.value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    signIn(formData);\r\n  };\r\n  if (auth.uid) return <Redirect to=\"/\" />;\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <form onSubmit={handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              onChange={handleChange}\r\n              name=\"email\"\r\n              value={email}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">LogIn</button>\r\n            <div className=\"red-text text-center\">\r\n              {authError && <p>{authError.message}</p>}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  authError: state.auth.authError,\r\n  auth: state.firebase.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { signIn })(SignIn);\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp } from \"../../store/actions/authActions\";\r\n\r\nconst SignUp = ({ auth, signUp }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n  });\r\n  const { email, password, firstName, lastName } = formData;\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.id]: e.target.value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    signUp(formData);\r\n  };\r\n  if (auth.uid) return <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <form onSubmit={handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              onChange={handleChange}\r\n              name=\"email\"\r\n              value={email}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"firstName\"\r\n              onChange={handleChange}\r\n              name=\"firstName\"\r\n              value={firstName}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              value={lastName}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.firebase.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { signUp })(SignUp);\r\n","import React, { useState } from \"react\";\r\nimport { createProject } from \"../../store/actions/projectActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst CreateProject = ({ createProject, auth, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n  });\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProject(formData, history);\r\n  };\r\n  const { title, content } = formData;\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"white\" onSubmit={(e) => onSubmit(e)}>\r\n        <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\r\n        <div className=\"input-field\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <label htmlFor=\"title\">Project Title</label>\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <textarea\r\n            id=\"content\"\r\n            name=\"content\"\r\n            className=\"materialize-textarea\"\r\n            value={content}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n          <label htmlFor=\"content\">Project Content</label>\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <button className=\"btn pink lighten-1\">Create</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.firebase.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(CreateProject);\r\n","import { CREATE_PROJECT, CREATE_PROJECT_ERROR } from \"../types\";\r\n\r\nexport const createProject = (project, history) => async (\r\n  dispatch,\r\n  getState,\r\n  { getFirebase, getFirestore }\r\n) => {\r\n  const fireStore = getFirestore();\r\n  const profile = getState().firebase.profile;\r\n  const uid = getState().firebase.auth.uid;\r\n  //make async call to database\r\n  try {\r\n    await fireStore.collection(\"projects\").add({\r\n      ...project,\r\n      authorFirstname: profile.firstName,\r\n      authorLastname: profile.lastName,\r\n      authorId: uid,\r\n      createdAt: new Date(),\r\n    });\r\n    dispatch({ type: CREATE_PROJECT, payload: project });\r\n    history.replace(\"/\");\r\n  } catch (error) {\r\n    dispatch({ type: CREATE_PROJECT_ERROR, payload: error });\r\n  }\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route exact path=\"/project/:id\" component={ProjectDetails} />\n          <Route exact path=\"/signin\" component={SignIn} />\n          <Route exact path=\"/signup\" component={SignUp} />\n          <Route exact path=\"/createProject\" component={CreateProject} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_ERROR,\r\n  LOGOUT_SUCCESS,\r\n  LOGOUT_FAIL,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAIL,\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  authError: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case LOGIN_ERROR:\r\n    case SIGNUP_FAIL:\r\n    case LOGOUT_FAIL:\r\n      return {\r\n        ...state,\r\n        authError: payload,\r\n      };\r\n    case SIGNUP_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      return { ...state, authError: null };\r\n    case LOGOUT_SUCCESS:\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { CREATE_PROJECT, CREATE_PROJECT_ERROR } from \"../types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case CREATE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: [...state.projects, payload],\r\n      };\r\n    case CREATE_PROJECT_ERROR:\r\n      return { ...state };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer,\r\n});\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDdtKbxp3nWMkGRm6dG1htAnWmqGOD0mYI\",\r\n  authDomain: \"reactreduxfirestore-48f7e.firebaseapp.com\",\r\n  databaseURL: \"https://reactreduxfirestore-48f7e.firebaseio.com\",\r\n  projectId: \"reactreduxfirestore-48f7e\",\r\n  storageBucket: \"reactreduxfirestore-48f7e.appspot.com\",\r\n  messagingSenderId: \"256272828689\",\r\n  appId: \"1:256272828689:web:840072789d9f12970964b0\",\r\n  measurementId: \"G-82YRL8XTCJ\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./store/reducers\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport firebaseConfig from \"./config/firebase\";\n\nconst initialState = {};\n\nconst middleware = [thunk.withExtraArgument({ getFirestore, getFirebase })];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(\n    applyMiddleware(...middleware),\n    reactReduxFirebase(firebaseConfig, {\n      useFirestoreForProfile: true,\n      userProfile: \"users\",\n      attachAuthIsReady: true,\n    }),\n    reduxFirestore(firebaseConfig)\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n});\n"],"sourceRoot":""}